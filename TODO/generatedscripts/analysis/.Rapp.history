h = hist(bg, breaks=breaks, plot=F)#
ylim = c(0, max(h$counts))#
xlim = c(0, ceiling(max(bg)))#
#
# categorize bg#
bg.cat = c("Ernstige hypo", "Hypo", "Normaal", "Hyper", "Ernstige hyper")#
#
bg.list = NULL#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "pink2")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
plot(abline(h=0:20, col=colors()[grep("pink",colors())],lwd=10))
h = hist(bg, breaks=breaks, plot=F)#
ylim = c(0, max(h$counts))#
xlim = c(0, ceiling(max(bg)))#
#
# categorize bg#
bg.cat = c("Ernstige hypo", "Hypo", "Normaal", "Hyper", "Ernstige hyper")#
#
bg.list = NULL#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "pink2")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
plot(abline(h=0:20, col=colors()[grep("pink",colors())],lwd=10))
colors()[grep("pink",colors())]
plot(abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10))
h = hist(bg, breaks=breaks, plot=F)#
ylim = c(0, max(h$counts))#
xlim = c(0, ceiling(max(bg)))#
#
# categorize bg#
bg.cat = c("Ernstige hypo", "Hypo", "Normaal", "Hyper", "Ernstige hyper")#
#
bg.list = NULL#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "pink2")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10)
colors()[grep("pink",colors())]
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "pink3")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
colors()[grep("pink",colors())]
abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "hotpink")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)#
abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10)#
colors()[grep("pink",colors())]
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "hotpink")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)#
abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10)#
colors()[grep("pink",colors())]
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("blue", "lightblue", "lightgreen", "pink", "pink3")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)#
abline(h=1:20, col=colors()[grep("pink",colors())],lwd=10)#
colors()[grep("pink",colors())]
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
colors()[grep("blue", colors())]
plot(1:66)
abline(h=1:66, col=colors()[grep("blue",colors())],lwd=10)
abline(h=26)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("dodgerblue3", "lightblue", "lightgreen", "pink", "pink3")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
colors()[grep("red",colors())]
abline(h=1:27, col=colors()[grep("red",colors())],lwd=10)
plot(1:27)
abline(h=1:27, col=colors()[grep("red",colors())],lwd=10)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("dodgerblue3", "lightblue", "lightgreen", "indianred3", "indianred4")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("dodgerblue3", "lightblue", "lightgreen", "indianred3", "indianred4")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
bg.cat = c("Ernstige hypo < 2.7 mM", "Hypo < 4 mM", "Normaal", "Hyper > 10", "Ernstige hyper > 15")#
#
bg.list = NULL#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("dodgerblue3", "lightblue", "lightgreen", "indianred3", "indianred4")#
#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
colors()[grep("blue",colors())]
plot(1:66)
abline(h=1:66, col=colors()[grep("blue",colors())],lwd=10)
bg.col = c(colors()[grep("blue",colors())][8], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][11], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][12], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][19], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][21], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][29], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][30], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c(colors()[grep("blue",colors())][12], "lightblue", "lightgreen", "indianred3", "indianred4")#
# dodgerblue3 8 11  12 19 21 29 30#
#pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mmol/L)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)
grep("blue",colors())][12]
colors()[grep("blue",colors())][12]
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()#
#
#
##
###
### Overview BG values#
###
##
bg = find.bgmeter()[,4]#
bg = bg[which(0 < bg)]
bg
# determine number of bars (width = 1)#
breaks = 0:ceiling(max(bg))#
#
# determine xlim, ylim#
h = hist(bg, breaks=breaks, plot=F)#
ylim = c(0, max(h$counts))#
xlim = c(0, ceiling(max(bg)))
# categorize bg#
bg.cat = c("Ernstige hypo (< 2.7 mM)", "Hypo (< 4 mM)", "Normaal", "Hyper (> 10 mM)", "Ernstige hyper (> 15 mM)")#
#
bg.list = NULL#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("cadetblue4", "lightblue", "lightgreen", "indianred3", "indianred4")#
#
#
pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")
par(mai=c(1.1,1.2,0,0))#
#
for (i in c(2,1,3:length(bg.cat)))#
{#
	if (i != 2) par(new=T)#
	hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mM)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)#
#
dev.off()
i
bg.list
bg[which(bg <= 4)]
bg.list
bg.list = NULL
bg.list[[1]] = bg[which(bg <= 2.7)]
bg.list
bg.list[[2]] = bg[which(bg <= 4)]
bg.list = list()#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]
bg.list
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()#
#
#
##
###
### Overview BG values#
###
##
bg = find.bgmeter()[,4]#
bg = bg[which(0 < bg)]#
#
# determine number of bars (width = 1)#
breaks = 0:ceiling(max(bg))#
#
# determine xlim, ylim#
h = hist(bg, breaks=breaks, plot=F)#
ylim = c(0, max(h$counts))#
xlim = c(0, ceiling(max(bg)))#
#
# categorize bg#
bg.cat = c("Ernstige hypo (< 2.7 mM)", "Hypo (< 4 mM)", "Normaal", "Hyper (> 10 mM)", "Ernstige hyper (> 15 mM)")
bg.list = list()#
bg.list[[1]] = bg[which(bg <= 2.7)]#
bg.list[[2]] = bg[which(bg <= 4)]#
bg.list[[3]] = bg[which(4 < bg & bg <= 10)]#
bg.list[[4]] = bg[which(10 < bg & bg <= 15)]#
bg.list[[5]] = bg[which(15 < bg)]#
#
# colors for severe hypo, hypo, norm, hyper, severe hyper#
bg.col = c("cadetblue4", "lightblue", "lightgreen", "indianred3", "indianred4")
pdf("/Users/mdijkstra/Documents/pompgemak/molgenis_distro/results/report/399454/399454_BGPie.pdf")#
#
par(mai=c(1.1,1.2,0,0))
for (i in c(2,1,3:length(bg.cat)))#
{#
        if (i != 2) par(new=T)#
        hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")#
}#
#
axis(1, at=c(0, 4, seq(10, max(bg), by=5)), cex.axis=2, padj=.5, lwd=2)#
axis(2, las=2, cex.axis=2, padj=.5, lwd=2)#
title(xlab="BG (mM)", ylab="Aantal metingen", cex.lab=2, line=4)#
#
legend("topright", legend=bg.cat, lwd=10, col=bg.col, box.lwd=0)#
#
dev.off()
h
h[["counts"]]
?hist
bg
hist(bg)
hist(bg.list[[i]], breaks=breaks, xlim=xlim, ylim=ylim, lwd=2, col=bg.col[i], axes=F, xlab="", ylab="", main="")
hist(bg, breaks=breaks)
bg[1]
bg[1]=1
hist(bg, breaks=breaks)
hist(bg, breaks=breaks,right=F)
bg[1]=4
hist(bg, breaks=breaks,right=F)
legend("topright", legend=bg.cat, lwd=10, col=bg.col, border=F, box.lty=0)
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()
source("http://localhost:8080/molgenis_distro/api/R")
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()
find.bgmeter()
a=find.bgmeter()
a
a[1,]
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)
length(cov)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]
plot(g,r)
abline(a=0,b=1)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Coverage")#
axis(1)#
axis(2)
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Coverage (>= 20x (%))")#
axis(1)#
axis(2)
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x")#
axis(1)#
axis(2)
text(r,g)
text(1:8,r,g)
text(1:8,r,g,cex=2)
text(1:8,r,g,cex=29)
text(r,g,1:8,cex=3)
text(r,g,1:8,cex=1)
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1)#
axis(2)#
text(r,g,1:8,cex=1)
abline(a=0,b=1)
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
axis(1, cex.axis=2, line=2)
axis(pos=2)
axis(1, cex.axis=2, pos=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, pos=2)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, pos=1)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, pos=0)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
axis(cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2))
axis(1, cex.axis=2, padj=2)
axis(1, cex.axis=2, padj=1)
axis(1, cex.axis=2, padj=.1)
axis(1, cex.axis=2, padj=.4)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n", cex.axis=2)#
axis(1, cex.axis=2, padj=.4)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, cex.axis=2)#
axis(2)#
text(r,g,1:8,cex=1)#
abline(a=0,b=1, lty=2)
axis(axis(1, cex.axis=2, padj=.4, lwd=2))
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(g, r, axes=F, xlab="", ylab="", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2, xlab="Groningen")#
axis(2, cex.axis=2, padj=.4, lwd=2, xlab="Rotterdam")#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="", ylab="", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2, xlab="Rotterdam")#
axis(2, cex.axis=2, padj=.4, lwd=2, xlab="Groningen")#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="", ylab="", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2, xlab="Rotterdam", line=-1)#
axis(2, cex.axis=2, padj=.4, lwd=2, xlab="Groningen")#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2, xlab="Rotterdam")#
axis(2, cex.axis=2, padj=.4, lwd=2, xlab="Groningen")#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="Percentage covered >= 20x", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2)#
axis(2, cex.axis=2, padj=.4, lwd=2)#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
#Percentage covered >= 20x#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2)#
axis(2, cex.axis=2, padj=.4, lwd=2)#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
par()$oma
par()$mai
par(mai=c(1.02, .82, 0,0))
cov = c(93, 91.4, 90.2, 87.9, 88.6, 85.5, 92.2, 90.3, 85, 80.2, 79.9, 73.8, 82.8, 77.8, 74, 67)#
g = cov[1:8 * 2]#
r = cov[1:8 * 2 - 1]#
#
#Percentage covered >= 20x#
plot(r, g, axes=F, xlab="Rotterdam", ylab="Groningen", main="", t="n")#
axis(1, cex.axis=2, padj=.4, lwd=2)#
axis(2, cex.axis=2, padj=.4, lwd=2)#
text(r,g,1:8,cex=2)#
abline(a=0,b=1, lty=2, lwd=2)
#
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()#
#
carbs.data	= find.carbs()#
#
# Remove zero carbs:#
index.keep	= which(0 < carbs.data[,4])#
carbs.data	= carbs.data[index.keep, ]#
#
unixtime	= carbs.data[,"unixtime"]#
carbs		= carbs.data[,"value"]#
#
# Convert unixtime (milli seconds) to hours on a day (0 ... 23.99)#
secondsInDay	= 86400#
secondsInHour	=  3600#
#
hour = ((unixtime/1e3) %% secondsInDay) / secondsInHour#
#
# Define bins for histogram#
bin.minutes	= 5#
bin.size	= bin.minutes / 60#
#
bin.right = seq(bin.size, 24, by = bin.size)	# Right side of bin (bin does not contain this value)#
bin.count = rep(0, length(bin.right))			# Grams of carbohydrates eaten in corresponding bin#
#
# Fill bin.right and bin.count for the intervals#
for (i in 1 : length(carbs))#
{#
	index = hour[i] %/% bin.size + 1#
	bin.count[index] = bin.count[index] + carbs[i]#
}
bin.count
88.8/10e5
1e2
88.8/1e2
3e2
88.8/1e5*3e8
88.8/1e5*3e8/.47
88.8/1e5*3e8*.47
88.8/1e5*3e8
88.8/1e5*3e8/.00001
88.8/1e5*3e8
w=(88.8/1e5*3e8)
3e8/2
3e8/w
1/2*2
w
w/3e8
3e8/2
3e8/w
3e8/w*.47
3e8/w
w
p=3e8
f=88.8/1e5
g=.47
f*p/g
1.4*43
1.4*43 + 7.5*8
1.4*43 + 7.5*8*2/3
100/47*88.8
100/47*88.8 / 100000
88.8 / 47 / 1000
10^4
10^5
10^5/100000
a = A = 300 * 10^6
A = 300 * 10^6
W = 88.8/10^5
A*W
0.47 / W
0.47 / (88.8/100000)
la()
ls()
72000000/1000
72000000/1000/3600
28800000/1000/3600
library(stringr)#
a=read.csv('../data/CareLink-Export-1353854792761.csv', sep=';', dec=',', skip=11, as.is=T)#
#
##
###
### CONCLUSIE: kolom 34 "Onbewerkt..type" kan als identificatie 'kolom' gebruikt worden#
### Als kolom 34 = "JournalEntryMealMarker" of "BolusWizardBolusEstimate"#
### dan staat er in kolom "Onbewerkt..waarden" zoiets als "CARB_INPUT=15".#
#
### Als kolom 34 = "GlucoseSensorData", dan "GlucoseSensorData" + "ISIG-waarde" pakken.#
###
##
#
##
###
### Gebeurtenis markeren: maaltijd#
###
##
index = which(a[,34] == "JournalEntryMealMarker")#
a[index, c("Tijdstempel", "Onbewerkt..waarden")]
17+14+9+15+17+18+18+16+9
133*.6
runif(1)
runif(1)*10
sample(1)
sample(1:3, 1)
.58 * 65
350/3
110-350/3
47.67+6.67
47.67+6.67+116.67
68+55
68+55 - 110
350/3
110 + 13
69 + 55 + 68 + 32 + 71 + 18 + 50
363/3
121-69
52+69
171-69
171-52
(121*3-2)/3
171-52
69+52
p=(365 - i) / 365
i=0
p=(365 - i) / 365
for (i in 1:23) p = p * (365 - i) / 365
p
p = 1;for (i in 1:22) p = p * (365 - i) / 365
p
p = 1;for (i in 1:22) p = p * (365 - i) / 365; print(p)
p = 1;for (i in 1:21) p = p * (365 - i) / 365; print(p)
names = read.csv('data_names')
list.files()
  path.expand( '~/' )
  path.expand( '.' )
  path.expand( './' )
list.files()
getwd()
frame_files <- lapply(sys.frames(), function(x) x$ofile)#
frame_files <- Filter(Negate(is.null), frame_files)#
PATH <- dirname(frame_files[[length(frame_files)]])
frame_files
system("ls")
system("$(dirname $0)")
a=system("$(dirname $0)")
a
#!/usr/bin/env Rscript#
# author: mdijkstra#
# version: 24jan12#
#
library(stringr)#
#
#FIXME: solve differently!#
current.path = '/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tools/getStatistics_20121127/'#
source(str_c(current.path,'getStatisticsFunctions.R'))#
#
debug = F#
source(str_c(current.path,'getStatisticsReadCommandLineArgs.R'))#
#
hsmetrics.col.selection = c('BAIT_SET', 'GENOME_SIZE', 'BAIT_TERRITORY', 'TARGET_TERRITORY', 'TOTAL_READS', 'PCT_PF_UQ_READS_ALIGNED', 'PF_UQ_BASES_ALIGNED', 'ON_BAIT_BASES', 'NEAR_BAIT_BASES', 'OFF_BAIT_BASES', 'MEAN_BAIT_COVERAGE', 'MEAN_TARGET_COVERAGE', 'ZERO_CVG_TARGETS_PCT', paste('PCT_TARGET_BASES_', c('2X', '10X', '20X', '30X'), sep=''), 'PCT_USABLE_BASES_ON_TARGET')#
almetrics.col.selection = c('MEAN_READ_LENGTH', 'STRAND_BALANCE')#
insert.col.selection = c('MEDIAN_INSERT_SIZE', 'MEAN_INSERT_SIZE', 'STANDARD_DEVIATION')#
dedup.col.selection = c('READ_PAIR_DUPLICATES', 'PERCENT_DUPLICATION')#
conc.col.selection = c('nSNPs', 'Overall_concordance')
hsmetrics.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//externalSampleID.hsmetrics"
hsmetrics.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//externalSampleID.hsmetrics"#
almetrics.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//externalSampleID.alignmentmetrics"#
insertmetrics.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//externalSampleID.insertsizemetrics"#
dedupmetrics.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//20130129_simMachine_0001_FLOWCELL_L1_None.human_g1k_v37.dedup.metrics"#
concordance.files = "/Users/mdijkstra/Documents/work/git/molgenis_apps/modules/compute/demo/demoWorkflow/root/tmp/projectName/run00//externalSampleID.concordance.ngsVSarray.txt"#
samples = "externalSampleID"
setwd('/Users/mdijkstra/Documents/pompgemak/molgenis_distro/generatedscripts/analysis')
rm(list=ls(all=T))#
library(RCurl, lib.loc='~/libs'); msource <- function(murl = 'http://localhost:8080/molgenis_distro/api/R', verbose = TRUE){if(verbose) cat('Creating connection',murl,'\n'); data <- getURLContent(murl); t <- tempfile(); writeLines(data, con=t); sys.source(t,globalenv()); unlink(t) }; msource()
m1 = matrix(1:9,nc=3)
m2 = matrix(1:9*2, nc=3)
m1
m2
array(list(m1,m2))
array(list(m1,m2), dimnames=c("a","b"))
array(list(m1,m2), dimnames=list("a","b"))
array(list(m1,m2), dimnames=c("a","b"))
array(list(m1,m2), dimnames=c("a","b"))$a
?array
names(array(list(m1,m2), dimnames=c("a","b")))
dimnames(array(list(m1,m2), dimnames=c("a","b")))
colnames(array(list(m1,m2), dimnames=c("a","b")))
array(list(m1,m2), dimnames=c("a","b"))
array(list(a=m1,b=m2), dimnames=c("a","b"))
?array
array(1:18, dim = c(2, 3, 3))
array(1:18, dim = c(2, 3, 3), dimnames=letters[1:3])
array(1:18, dim = c(2, 3, 3), dimnames=c("a","b","c"))
list(bg=matrix(1:9,3))
list(bg=matrix(1:9,3), ins=matrix(1:9*2,3))
a=list(bg=matrix(1:9,3), ins=matrix(1:9*2,3))
a$bg
dim(a$bg)
dim(a$bg) == dim(a$ins)
all(dim(a$bg) == dim(a$ins))
